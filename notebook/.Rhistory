install.packages("package_Location", repos = NULL, type=source)
install.packages("devtools")
devtools::install_github("ogru/DGSA")
library(DGSA)
plot(cars)
datadir <- ../SWIsmall
datadir <- '../SWIsmall'
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT         <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"))
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"))
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "all*")
INPUT
type(INPUT)
INPUT.type
typeof(INPUT)
plotCDFS(clustering, INPUT)
clustering
print(clustering)
print(clustering)
print(clustering.T)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)
plotCDFS(clustering, INPUT)
print(clustering)
typeof(clustering)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"))
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
plotCDFS(clustering, INPUT)
plotCDFS(clustering, INPUT, .code = "all*")
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)$V1:V498
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)$V1:V497
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)$:
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
OUTPUT.D.columns
OUTPUT.D.headers
OUTPUT.D.header
OUTPUT.D.columns
OUTPUT.D.name
OUTPUT.D.names
OUTPUT.D.key
headers(OUTPUT.D)
columns(OUTPUT.D)
names(OUTPUT.D)
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)$V1:$V498
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)$V1:V498
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 1)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 5)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 10)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 4)
plotCDFS(clustering, INPUT, .code = "sy|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "wel0|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "wel1|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "wel2|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "hk_.var.|CF_.spatial.", .nBins = 3)
myDGSA <- dgsa(clustering, INPUT, .interactions = TRUE, .nBoot = 100, .nBins = 3, .alpha = 0.95, .parallel = FALSE)
myDGSA <- dgsa(clustering, INPUT, .interactions = TRUE, .nBoot = 100, .nBins = 3, .alpha = 0.95, .parallel = FALSE)
plotMatrixDGSA(.dgsa, .hypothesis = TRUE, .method = "circle", ...)
plotMatrixDGSA(.dgsa, .hypothesis = TRUE, .method = "circle", ...)
plotMatrixDGSA(.dgsa, .hypothesis = TRUE, .method = "circle")
plotMatrixDGSA(myDGSA, .hypothesis = TRUE, .method = "circle", ...)
plotMatrixDGSA(.myDGSA, .hypothesis = TRUE, .method = "circle", ...)
plotMatrixDGSA(myDGSA, .hypothesis = TRUE, .method = "circle")
plotParetoDGSA(myDGSA, .interaction = "CF_.spatial.")
plotParetoDGSA(myDGSA)
plotParetoDGSA(myDGSA, .interaction = "CF_.spatial.")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE, .method = "circle")
plotCDFS(clustering, INPUT, .code = "hk_.var.|CF_.spatial.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "hk_.var.|vario_.type.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "hk_.var.|vario_.type.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "hk_.var.|vario_.type.", .nBins = 1)
plotCDFS(clustering, INPUT, .code = "hk_.var.|CF_.glob.", .nBins = 1)
plotCDFS(clustering, INPUT, .code = "hk_.var.|CF_.glob.", .nBins = 3)
plotParetoDGSA(myDGSA, .interaction = "CF_.glob.")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE, .method = "number")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE, .method = "circle")
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|confined_.yn.", .nBins = 3)
What are the nBins? Why can I plot more than the number of clusters?
-->They look like bins of the conditional variable (e.g. CF_glob in "hk_var|CF_glob"). The binned values should say, if we take each of the clustered CDFs for "hk_var", then color-code them according to the value of CF_glob, does it make a difference?
```{r}
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|CF_.spatial.", .nBins = 3)
```
```{r}
plotCDFS(clustering, INPUT, .code = "CF_.var.|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "CF_.var.|confined_.yn", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "CF_.var.|confined_.yn", .nBins = 1)
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
INPUT    <- read.csv(file.path(datadir,"ParametersValues_AEM.csv"))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "CF_.var.|confined_.yn", .nBins = 1)
plotCDFS(clustering, INPUT, .code = "CF_.var.|confined_.yn.", .nBins = 1)
plotCDFS(clustering, INPUT, .code = "CF_.var.|confined_.yn.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|confined_.yn.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "CF_.spatial.")
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|confined_.yn.", .nBins = 2)
paste("A", 1:6, sep = "")
section_name = '501_1000'
sprintf("ParametersValues_AEM_%s.csv.",section_name)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
section_name = '501_1000'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_AEM_%s.csv",section_name)))
OUTPUT.D <- read.csv(file.path(datadir,"D_AEM.csv"),header=FALSE)
clustering <-read.csv(file.path(datadir,"Cluster_AEM.csv"),header=FALSE)$V1
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
section_name = '501_1000'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_AEM_%s.csv",section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_AEM_%s.csv",section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_AEM_%s.csv",section_name)),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "CF_.spatial.")
plotCDFS(clustering, INPUT, .code = "wel0", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "wel0|CF_.spatial.", .nBins = 2)
myDGSA <- dgsa(clustering, INPUT, .interactions = TRUE, .nBoot = 100, .nBins = 3, .alpha = 0.95, .parallel = FALSE)
plotMatrixDGSA(myDGSA, .hypothesis = FALSE, .method = "circle")
plotCDFS(clustering, INPUT, .code = "m")
plotParetoDGSA(myDGSA)
plotCDFS(clustering, INPUT, .code = "wel0|m", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "hk_.var.|m", .nBins = 2)
plotMatrixDGSA(myDGSA, .hypothesis = TRUE, .method = "circle")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "circle")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "pie")
plotParetoDGSA(myDGSA, .interaction = "CF_.glob.",.cluster="mean")
plotParetoDGSA(myDGSA, .interaction = "CF_.glob.")
plotParetoDGSA(myDGSA, .interaction = "CF_.spatial.")
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
section_name = '501_1000'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_AEM_%s.csv",section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_AEM_%s.csv",section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_AEM_%s.csv",section_name)),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "pie")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "value")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "number")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "p")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "ellipse")
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "pie")
#section_name = '501_1000'
section_name = '0_500'
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
#section_name = '501_1000'
section_name = '0_500'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_AEM_%s.csv",section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_AEM_%s.csv",section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_AEM_%s.csv",section_name)),header=FALSE)$V1
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "m")
plotCDFS(clustering, INPUT, .code = "hk_.var.|m", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "hk_.var.|m", .nBins = 2)
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "pie")
plotParetoDGSA(myDGSA)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
# section_name = '501_1000' #confined
section_name = '0_500' #unconfined
# test_var = 'AEM'
test_var = 'conc'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_%s_%s.csv",test_var,section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_AEM_%s,%s.csv",test_var,section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_%s_%s.csv",test_var,section_name)),header=FALSE)$V1
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
# section_name = '501_1000' #confined
section_name = '0_500' #unconfined
# test_var = 'AEM'
test_var = 'conc'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_%s_%s.csv",test_var,section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_AEM_%s_%s.csv",test_var,section_name)),header=FALSE)
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
# section_name = '501_1000' #confined
section_name = '0_500' #unconfined
# test_var = 'AEM'
test_var = 'conc'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_%s_%s.csv",test_var,section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_%s_%s.csv",test_var,section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_%s_%s.csv",test_var,section_name)),header=FALSE)$V1
fprintf('Testing on %s, iterations %s \t (0-500=unconfined;501-1000=confined) ',test_var,section_name)
sprintf('Testing on %s, iterations %s \t (0-500=unconfined;501-1000=confined) ',test_var,section_name)
sprintf('Testing on %s, iterations %s \n (0-500=unconfined;501-1000=confined) ',test_var,section_name)
sprintf('Testing on %s, iterations %s \newline (0-500=unconfined;501-1000=confined) ',test_var,section_name)
cat(sprintf('Testing on %s, iterations %s (0-500=unconfined;501-1000=confined) ',test_var,section_name))
cat(sprintf('Testing on %s, iterations %s \n(0-500=unconfined;501-1000=confined) ',test_var,section_name))
cat(sprintf('Testing on %s, iterations %s \t(0-500=unconfined;501-1000=confined) ',test_var,section_name))
plotCDFS(clustering, INPUT, .code = "all*")
plotCDFS(clustering, INPUT, .code = "CF_.spatial.")
plotCDFS(clustering, INPUT, .code = "hk_.var.|CF_.spatial.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|hk_.var.", .nBins = 2)
plotCDFS(clustering, INPUT, .code = "CF_.spatial.|hk_.var.", .nBins = 3)
myDGSA <- dgsa(clustering, INPUT, .interactions = TRUE, .nBoot = 100, .nBins = 3, .alpha = 0.95, .parallel = FALSE)
plotMatrixDGSA(myDGSA, .hypothesis = FALSE , .method = "pie")
plotParetoDGSA(myDGSA)
plotParetoDGSA(myDGSA, .interaction = "CF_.spatial.")
plotCDFS(clustering, INPUT, .code = "CF_.glob.|CF_.spatial.", .nBins = 3)
plotCDFS(clustering, INPUT, .code = "CF_.glob.|CF_.spatial.", .nBins = 5)
plotCDFS(clustering, INPUT, .code = "al")
datadir <- '../work/heterog_1000/MC_expt_2020-02-01-18-15/export_1000'
section_name = '501_1000' #confined
# section_name = '0_500' #unconfined
# test_var = 'AEM'
test_var = 'conc'
INPUT    <- read.csv(file.path(datadir,sprintf("ParametersValues_%s_%s.csv",test_var,section_name)))
OUTPUT.D <- read.csv(file.path(datadir,sprintf("D_%s_%s.csv",test_var,section_name)),header=FALSE)
clustering <-read.csv(file.path(datadir,sprintf("Cluster_%s_%s.csv",test_var,section_name)),header=FALSE)$V1
cat(sprintf('Testing on %s, iterations %s \t(key: 0-500=unconfined;501-1000=confined) ',test_var,section_name))
plotCDFS(clustering, INPUT, .code = "all*")
myDGSA <- dgsa(clustering, INPUT, .interactions = TRUE, .nBoot = 100, .nBins = 3, .alpha = 0.95, .parallel = FALSE)
